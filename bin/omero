#!/usr/bin/env python

"""

:author: Josh Moore <josh@glencoesoftware.com>

Python driver for OMERO
Copyright (c) 2007, Glencoe Software, Inc.
See LICENSE for details.

"""
import sys, os, stat

def not_root(omero):
    try:
        if os.geteuid() == 0:
            owner = os.stat(omero)[stat.ST_UID]
            if owner == 0:
                print "OMERO directories belong to root"
                print "Please use \"chown -R NEWUSER %s\" and run as the new user" % omero
                print "Exiting"
            else:
                try:
                   import pwd
                   owner = "%s" % pwd.getpwuid(owner)[0]
                except:
                   pass
                print "Running %s as root can corrupt your directory permissions." % sys.argv[0]
                print "Login as the user (%s) who owns the OMERO directories: %s" % (owner, omero)
                print "Exiting..."
            sys.exit(1)
    except AttributeError, ae:
        # This platform doesn't support effective uid
        # So nothing to worry about.
        pass

def readlink(file=sys.argv[0]):
    import stat

    file = sys.argv[0]
    while stat.S_ISLNK(os.lstat(file)[stat.ST_MODE]):
        target = os.readlink(file)
        if target[0] != "/":
            file = os.path.join(os.path.dirname(file), target)
        else:
            file = target

    file = os.path.abspath(file)
    return file

if os.environ.has_key("OMERO_HOME"):
    top = os.environ["OMERO_HOME"]
    if not os.path.exists(top):
        print "OMERO_HOME=%s cannot be found" % top
else:
    exe = readlink()
    top = os.path.join(exe, os.pardir, os.pardir)

top = os.path.normpath(top)
lib = os.path.join(top, "lib")
lib = os.path.join(top, "lib","python")
sys.path.append(lib)


not_root(top)
try:
    import omero.cli
    rv = omero.cli.argv()
    sys.exit(rv)
except KeyboardInterrupt, ki:
    print "Cancelled"
    sys.exit(1)
